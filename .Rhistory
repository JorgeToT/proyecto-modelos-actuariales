db_clean = db_clean[:100,]
db_clean = db_clean[:100,]
db_clean = data.frame("Monto Pagado"=db$MONTO.PAGADO[0:100,])
db = read.csv("./db.csv")
db_clean = data.frame("Monto Pagado"=db$MONTO.PAGADO[0:100,])
db_clean = data.frame("Monto Pagado"=db$MONTO.PAGADO[100,])
db_clean = data.frame("Monto Pagado"=db$MONTO.PAGADO[,])
View(db)
db_clean = db_clean[c(1:100),]
db_clean = db_clean[c(1:100),]
db_clean = db_clean[-c(1:100),]
install.packages("openxlsx")
library(openxlsx)
db = read.csv("./db.csv")
db_clean = data.frame("Monto Pagado"=db$MONTO.PAGADO)
db_clean = db_clean[c(1:100),]
sum(is.na(db_clean))
sum(db_clean==0)
db_clean = db_clean[db_clean>0,]
db_clean = data.frame("Monto Pagado"=db$db_clean)
db_clean = db_clean[db_clean>0,]
data = data.frame("Monto Pagado"=db_clean)
summary(data$Monto.Pagado)
db = read.csv("./db.csv")
db_clean = data.frame("Monto Pagado"=db$MONTO.PAGADO)
db_clean = db_clean[c(1:100),]
sum(is.na(db_clean))
sum(db_clean==0)
db_clean = data.frame("Monto Pagado"=db$db_clean)
db_clean = db_clean[db_clean>0,]
data = data.frame("Monto Pagado"=db_clean)
summary(data$Monto.Pagado)
db_clean = data.frame("Monto Pagado"=db$MONTO.PAGADO)
db_clean = db_clean[c(1:100),]
db = read.csv("./db.csv")
db_clean = data.frame("Monto Pagado"=db$MONTO.PAGADO)
db_clean = db_clean[c(1:100),]
sum(is.na(db_clean))
sum(db_clean==0)
db_clean = data.frame("Monto Pagado"=db_clean)
db_clean = db_clean[db_clean>0,]
data = data.frame("Monto Pagado"=db_clean)
View(data)
summary(data$Monto.Pagado)
skewness(data$Monto.Pagado)
kurtosis(data$Monto.Pagado)
sumlog<-sum(log(data$Monto.Pagado))
media<-mean(data$Monto.Pagado)
n<-length(data$Monto.Pagado)
plot(density(data$Monto.Pagado))
n
fitpar<-fitdist(data$Monto.Pagado, "pareto", method = "mle")
fitweibull<-fitdist(data$Monto.Pagado, "weibull", method="mle")
summary(fitweibull)
confint(fitweibull)
gofstat(fitweibull)
fitlgamma<-fitdist(data$Monto.Pagado, "lgamma", method="mle")
summary(fitlgamma)
confint(fitlgamma)
gofstat(fitlgamma)
cdfcomp(fitlgamma)
install.packages("scale")
library(scales)
kable(rescale(data$Monto.Pagado))
kable(rescale(data$Monto.Pagado))
library(kableExtra)
install.packages("kableExtra")
library(kableExtra)
kable(rescale(data$Monto.Pagado))
summary(data$Monto.Pagado)
View(data)
db = read.csv("./db.csv")
db_clean = data.frame("Monto Pagado"=db$MONTO.PAGADO)
db_clean = db_clean[c(1:100),]
sum(is.na(db_clean))
sum(db_clean==0)
db_clean = data.frame("Monto Pagado"=db_clean)
db_clean = db_clean[db_clean>0,]
data = data.frame("Monto Pagado"=db_clean)
View(data)
kable(rescale(data$Monto.Pagado))
data = kable(rescale(data$Monto.Pagado))
data = rescale(data$Monto.Pagado)
data = data.frame("Monto Pagado"=db_clean)
data = rescale(data$Monto.Pagado)
db = read.csv("./db.csv")
db_clean = data.frame("Monto Pagado"=db$MONTO.PAGADO)
db_clean = db_clean[c(1:100),]
sum(is.na(db_clean))
sum(db_clean==0)
db_clean = data.frame("Monto Pagado"=db_clean)
db_clean = db_clean[db_clean>0,]
data = data.frame("Monto Pagado"=db_clean)
data = rescale(data$Monto.Pagado)
data = data.frame("Monto Pagado"=data)
summary(data$Monto.Pagado)
skewness(data$Monto.Pagado)
kurtosis(data$Monto.Pagado)
sumlog<-sum(log(data$Monto.Pagado))
media<-mean(data$Monto.Pagado)
n<-length(data$Monto.Pagado)
plot(density(data$Monto.Pagado))
fitlogn<-fitdist(data$Monto.Pagado, "lnorm", method = "mle")
summary(fitlogn)
confint(fitlogn)
fitlogn<-fitdist(data$Monto.Pagado, "lnorm", method = "mle")
db_clean = data.frame("Monto Pagado"=db$MONTO.PAGADO)
db_clean = db_clean[c(1:100),]
sum(is.na(db_clean))
sum(db_clean==0)
db_clean = data.frame("Monto Pagado"=db_clean)
db_clean = db_clean[db_clean>0,]
data = data.frame("Monto Pagado"=db_clean)
summary(data$Monto.Pagado)
fitlogn<-fitdist(data$Monto.Pagado, "lnorm", method = "mle")
fitpar<-fitdist(data$Monto.Pagado, "pareto", method = "mle")
fitweibull<-fitdist(data$Monto.Pagado, "weibull", method="mle")
summary(fitweibull)
confint(fitweibull)
gofstat(fitweibull)
fitlgamma<-fitdist(data$Monto.Pagado, "lgamma", method="mle")
summary(fitlgamma)
confint(fitlgamma)
gofstat(fitlgamma)
fitllog<-fitdist(data$Monto.Pagado, "llogis", method="mle")
summary(fitllog)
confint(fitllog)
gofstat(fitllog)
cdfcomp(fitllog)
cdfcomp(fitlgamma)
cdfcomp(fitpar)
fitllog<-fitdist(data$Monto.Pagado, "llogis", method="mle")
summary(fitllog)
confint(fitllog)
gofstat(fitllog)
cdfcomp(fitllog)
install.packages(c('kdensity', 'ks'))
db_clean = data.frame("Monto Pagado"=db$MONTO.PAGADO/100)
db_clean = db_clean[c(1:100),]
sum(is.na(db_clean))
sum(db_clean==0)
db_clean = data.frame("Monto Pagado"=db_clean)
db_clean = db_clean[db_clean>0,]
data = data.frame("Monto Pagado"=db_clean)
summary(data$Monto.Pagado)
db_clean = data.frame("Monto Pagado"=db$MONTO.PAGADO)
db_clean = db_clean[c(1:100),]
sum(is.na(db_clean))
sum(db_clean==0)
db_clean = data.frame("Monto Pagado"=db_clean)
db_clean = db_clean[db_clean>0,]
data = data.frame("Monto Pagado"=db_clean)
summary(data$Monto.Pagado)
db_clean = data.frame("Monto Pagado"=db$MONTO.PAGADO/100)
db_clean = db_clean[c(1:100),]
sum(is.na(db_clean))
sum(db_clean==0)
db_clean = data.frame("Monto Pagado"=db_clean)
db_clean = db_clean[db_clean>0,]
data = data.frame("Monto Pagado"=db_clean)
summary(data$Monto.Pagado)
skewness(data$Monto.Pagado)
kurtosis(data$Monto.Pagado)
sumlog<-sum(log(data$Monto.Pagado))
media<-mean(data$Monto.Pagado)
n<-length(data$Monto.Pagado)
plot(density(data$Monto.Pagado))
fitlogn<-fitdist(data$Monto.Pagado, "lnorm", method = "mle")
summary(fitlogn)
confint(fitlogn)
gofstat(fitlogn)
mu<-fitlogn$estimate[1]
sigmaln<-fitlogn$estimate[2]
ks.test(data$Monto.Pagado, "plnorm", meanlog=mu, sdlog=sigmaln)
ad.test(plnorm(data$Monto.Pagado, meanlog=mu, sdlog=sigmaln))
cdfcomp(fitlogn)
fitpar<-fitdist(data$Monto.Pagado, "pareto", method = "mle")
summary(fitpar)
confint(fitpar)
gofstat(fitpar)
alphha<-fitpar$estimate[1]
sigmaln<-fitpar$estimate[2]
ks.test(data$Monto.Pagado, "plnorm", meanlog=mu, sdlog=sigmaln)
ad.test(plnorm(data$Monto.Pagado, meanlog=mu, sdlog=sigmaln))
cdfcomp(fitpar)
fitweibull<-fitdist(data$Monto.Pagado, "weibull", method="mle")
fitlogn<-fitdist(data$Monto.Pagado, "lnorm", method = "mle")
fitpar<-fitdist(data$Monto.Pagado, "pareto", method = "mle")
summary(fitpar)
confint(fitpar)
gofstat(fitpar)
alphha<-fitpar$estimate[1]
sigmaln<-fitpar$estimate[2]
ks.test(data$Monto.Pagado, "plnorm", meanlog=mu, sdlog=sigmaln)
ad.test(plnorm(data$Monto.Pagado, meanlog=mu, sdlog=sigmaln))
cdfcomp(fitpar)
fitweibull<-fitdist(data$Monto.Pagado, "weibull", method="mle")
fitlgamma<-fitdist(data$Monto.Pagado, "lgamma", method="mle")
summary(fitlgamma)
confint(fitlgamma)
gofstat(fitlgamma)
cdfcomp(fitlgamma)
fitllog<-fitdist(data$Monto.Pagado, "llogis", method="mle")
summary(fitllog)
confint(fitllog)
gofstat(fitllog)
cdfcomp(fitllog)
fitweibull<-fitdist(data$Monto.Pagado, "weibull", method="mle")
db_clean = data.frame("Monto Pagado"=db$MONTO.PAGADO/1000)
db_clean = db_clean[c(1:100),]
sum(is.na(db_clean))
sum(db_clean==0)
db_clean = data.frame("Monto Pagado"=db_clean)
db_clean = db_clean[db_clean>0,]
data = data.frame("Monto Pagado"=db_clean)
summary(data$Monto.Pagado)
skewness(data$Monto.Pagado)
kurtosis(data$Monto.Pagado)
sumlog<-sum(log(data$Monto.Pagado))
media<-mean(data$Monto.Pagado)
n<-length(data$Monto.Pagado)
plot(density(data$Monto.Pagado))
#LogNormal
{
fitlogn<-fitdist(data$Monto.Pagado, "lnorm", method = "mle")
summary(fitlogn)
confint(fitlogn)
gofstat(fitlogn)
mu<-fitlogn$estimate[1]
sigmaln<-fitlogn$estimate[2]
ks.test(data$Monto.Pagado, "plnorm", meanlog=mu, sdlog=sigmaln)
ad.test(plnorm(data$Monto.Pagado, meanlog=mu, sdlog=sigmaln))
cdfcomp(fitlogn)
}
#Pareto
{
fitpar<-fitdist(data$Monto.Pagado, "pareto", method = "mle")
summary(fitpar)
confint(fitpar)
gofstat(fitpar)
alphha<-fitpar$estimate[1]
sigmaln<-fitpar$estimate[2]
ks.test(data$Monto.Pagado, "plnorm", meanlog=mu, sdlog=sigmaln)
ad.test(plnorm(data$Monto.Pagado, meanlog=mu, sdlog=sigmaln))
cdfcomp(fitpar)
}
#Weibull
{
fitweibull<-fitdist(data$Monto.Pagado, "weibull", method="mle")
summary(fitweibull)
confint(fitweibull)
gofstat(fitweibull)
cdfcomp(fitweibull)
}
#LogGamma
{
fitlgamma<-fitdist(data$Monto.Pagado, "lgamma", method="mle")
summary(fitlgamma)
confint(fitlgamma)
gofstat(fitlgamma)
cdfcomp(fitlgamma)
}
#LogLogistica
{
fitllog<-fitdist(data$Monto.Pagado, "llogis", method="mle")
summary(fitllog)
confint(fitllog)
gofstat(fitllog)
cdfcomp(fitllog)
}
kunif <- density(data, bw = 6, kernel = "rectangular")
kunifucv <- density(data, bw = "ucv", kernel = "rectangular")
fitweibull<-fitdist(data$Monto.Pagado, "weibull", method="mle")
summary(fitweibull)
confint(fitweibull)
gofstat(fitweibull)
cdfcomp(fitweibull)
data
data=data$Monto.Pagado
kunif <- density(data, bw = 6, kernel = "rectangular")
kunifucv <- density(data, bw = "ucv", kernel = "rectangular")
ktriang <- density(data, bw = "ucv", kernel = "triangular")
kgamma <- kdensity(data, start = "gamma", kernel = "gamma")
coef(kgamma)
kunif <- density(data, bw = 6, kernel = "rectangular")
kunifucv <- density(data, bw = "ucv", kernel = "rectangular")
kunifucv <- density(data, bw = "bcv", kernel = "rectangular")
data <- c(112,118,132,129,121,135,148,148,136,119,104,118,115,126,141,135,125,149,170,170,
158,133,114,140,145,150,178,163,172,178,199,199,184,162,146,166,171,180,193,181,183,
218,230,242,209,191,172,194,196,196,236,235,229,243,264,272,237,211,180,201,204,188,
235,227,234,264,302,293,259,229,203,229,242,233,267,269,270,315,364,347,312,274,237,
278,284,277,317,313,318,374,413,405,355,306,271,306,315,301,356,348,355,422,465,467,
404,347,305,336,340,318,362,348,363,435,491,505,404,359,310,337,360,342,406,396,420,
472,548,559,463,407,362,405,417,391,419,461,472,535,622,606,508,461,390,432)
kunif <- density(data, bw = 6, kernel = "rectangular")
kunifucv <- density(data, bw = "ucv", kernel = "rectangular")
ktriang <- density(data, bw = "ucv", kernel = "triangular")
kgamma <- kdensity(data, start = "gamma", kernel = "gamma")
coef(kgamma)
plot(kunif)
lines(kunifucv, col = "red")
plot(kgamma, main = "Valor de las reclamaciones en mdp", col = "blue")
lines(kunif, col = "black")
lines(ktriang, col = "red")
lines(density(data), col = "green")
setwd("~/Workspace Universidad/Proyecto-Modelos")
db = read.csv("./db.csv")
db_clean = data.frame("Monto Pagado"=db$MONTO.PAGADO/1000)
db_clean = db_clean[c(1:100),]
sum(is.na(db_clean))
sum(db_clean==0)
db_clean = data.frame("Monto Pagado"=db_clean)
db_clean = db_clean[db_clean>0,]
data = data.frame("Monto Pagado"=db_clean)
kunif <- density(data$Monto.Pagado, bw = "ucv", kernel = "rectangular")
View(data)
db_clean = data.frame("Monto Pagado"=db$MONTO.PAGADO/10000)
db_clean = db_clean[c(1:100),]
sum(is.na(db_clean))
sum(db_clean==0)
db_clean = data.frame("Monto Pagado"=db_clean)
db_clean = db_clean[db_clean>0,]
data = data.frame("Monto Pagado"=db_clean)
kunif <- density(data$Monto.Pagado, bw = "ucv", kernel = "rectangular")
kunif <- density(data$Monto.Pagado, bw = "6", kernel = "rectangular")
kunif <- density(data$Monto.Pagado, bw = "6", kernel = "rectangular")
kunifucv <- density(data, bw = "ucv", kernel = "rectangular")
kunifucv <- density(data$Monto.Pagado, bw = "ucv", kernel = "rectangular")
ktriang <- density(data$Monto.Pagado, bw = "ucv", kernel = "triangular")
kunif <- density(data$Monto.Pagado, bw = "ucv", kernel = "rectangular")
ktriang <- density(data$Monto.Pagado, bw = "ucv", kernel = "triangular")
kgamma <- kdensity(data$Monto.Pagado, start = "gamma", kernel = "gamma")
plot(kgamma, main = "Valor de las reclamaciones en mdp", col = "blue")
lines(kunif, col = "black")
lines(ktriang, col = "red")
lines(density(data), col = "green")
plot(kunif, main = "Valor de las reclamaciones en mdp", col = "blue")
plot(kunif, main = "Valor de las reclamaciones en mdp", col = "blue")
lines(ktriang, col = "orange")
lines(kgamma, col = "red")
lines(density(data$Monto.Pagado), col = "green")
kgamma <- kdensity(data$Monto.Pagado, start = "gamma", kernel = "gamma")
install.packages("kdensity")
library(kdensity)
kgamma <- kdensity(data$Monto.Pagado, start = "gamma", kernel = "gamma")
plot(kunif, main = "Valor de las reclamaciones en mdp", col = "blue")
lines(ktriang, col = "orange")
lines(kgamma, col = "red")
lines(density(data$Monto.Pagado), col = "green")
lines(density(data$Monto.Pagado), col = "green", lwd=3)
plot(kunif, main = "Valor de las reclamaciones en mdp", col = "blue", lwd=2)
lines(ktriang, col = "orange", lwd=2)
lines(kgamma, col = "red", lwd=2)
lines(density(data$Monto.Pagado), col = "green", lwd=3)
kunif <- density(data$Monto.Pagado, bw = "ucv", kernel = "rectangular")
ktriang <- density(data$Monto.Pagado, bw = "ucv", kernel = "triangular")
kgamma <- kdensity(data$Monto.Pagado, start = "gamma", kernel = "gamma")
kunif <- density(data$Monto.Pagado, kernel = "rectangular")
ktriang <- density(data$Monto.Pagado, kernel = "triangular")
kgamma <- kdensity(data$Monto.Pagado, start = "gamma", kernel = "gamma")
plot(kunif, main = "Valor de las reclamaciones en mdp", col = "blue", lwd=2)
lines(ktriang, col = "orange", lwd=2)
lines(kgamma, col = "red", lwd=2)
lines(density(data$Monto.Pagado), col = "green", lwd=3)
kgamma <- kdensity(data$Monto.Pagado, kernel = "gamma")
plot(kunif, main = "Valor de las reclamaciones en mdp", col = "blue", lwd=2)
lines(ktriang, col = "orange", lwd=2)
lines(kgamma, col = "red", lwd=2)
lines(density(data$Monto.Pagado), col = "green", lwd=3)
plot(density(data$Monto.Pagado), col = "green", lwd=3)
lines(kunif, main = "Monto Pagado en ", col = "blue", lwd=2)
lines(ktriang, col = "orange", lwd=2)
lines(kgamma, col = "red", lwd=2)
plot(density(data$Monto.Pagado), col = "green", lwd=3)
lines(kunif, main = "Monto Pagado en ", col = "blue", lwd=2)
lines(ktriang, col = "orange", lwd=2)
lines(kgamma, col = "red", lwd=2)
plot(density(data$Monto.Pagado), col = "green", lwd=4)
lines(kunif, main = "Monto Pagado en ", col = "blue", lwd=2)
lines(ktriang, col = "orange", lwd=2)
lines(kgamma, col = "red", lwd=2)
plot(density(data$Monto.Pagado), col = "green", lwd=4, main = "Monto Pagado")
lines(kunif, col = "blue", lwd=2)
lines(ktriang, col = "orange", lwd=2)
lines(kgamma, col = "red", lwd=2)
source("~/Workspace Universidad/Proyecto-Modelos/Proyecto-Modelos-Actuariales.R")
print("El número total de datos NA es: "sum(is.na(db_clean)))
print("El número total de datos NA es: ",sum(is.na(db_clean)))
print(c("El número total de datos NA es: ",sum(is.na(db_clean))))
print(paste("El número total de datos NA es: ",sum(is.na(db_clean))))
print(paste("El número total de datos NA es: ",sum(db_clean==0)))
knitr::opts_chunk$set(echo = TRUE)
$\displaystyle {\frac {1}{x\sigma {\sqrt {2\pi }}}}\exp \left(-{\frac {(\ln x-\mu )^{2}}{2\sigma ^{2}}}\right)$
summary(fitlgamma)
confint(fitlgamma)
gofstat(fitlgamma)
cdfcomp(fitlogn)
plot(density(data$Monto.Pagado), Main="H")
plot(density(data$Monto.Pagado), main="H")
plot(density(data$Monto.Pagado), main="H")
plot(density(data$Monto.Pagado), main="Densidad de probabilidad")
plot(density(data$Monto.Pagado), main="Densidad de probabilidad")
source("~/Workspace Universidad/Proyecto-Modelos/Proyecto-Modelos-Actuariales.R")
gofstat(fitllog)
cdfcomp(fitllog)[1]
cdfcomp(fitllog)[0]
gofstat(fitllog)[0]
gofstat(fitllog)[1]
gofstat(fitllog)[2]
gofstat(fitllog)[3]
confint(fitllog)
summary(fitllog)
gofstat(fitllog)
gofstat(fitllog)[4]
gofstat(fitllog)[8]
gofstat(fitllog)[7]
gofstat(fitllog)[9]
gofstat(fitllog)[7]
gofstat(fitllog)[8]
gofstat(fitllog)[9]
gofstat(fitllog)[8]
gofstat(fitllog)[10]
gofstat(fitllog)[11]
gofstat(fitllog)[3]
fitpar<-fitdist(data$Monto.Pagado, "pareto", method = "mle")
summary(fitpar)
confint(fitpar)
gofstat(fitpar)
gofstat(fitpar)[3]
gofstat(fitpar)[8]
gofstat(fitpar)[11]
summary(fitweibull)
confint(fitweibull)
gofstat(fitweibull)
gofstat(fitweibull)[3]
gofstat(fitweibull)[8]
gofstat(fitweibull)[11]
summary(fitlgamma)
confint(fitlgamma)
gofstat(fitlgamma)
gofstat(fitlgamma)[3]
gofstat(fitlgamma)[8]
gofstat(fitlgamma)[11]
cdfcomp(fitlgamma)
gofstat(fitlgamma)[8]
cdfcomp(fitweibull)
final_table<-data.frame(c("c"=c(2,3), "q"=c(2,3)))
final_table
final_table<-data.frame()
final_table["Chi-Cuadrada"]=c(gofstat(fitlogn)[3],gofstat(fitpar)[3],gofstat(fitweibull)[3],gofstat(fitlgamma)[3],gofstat(fitllog)[3])
final_table
final_table["Chi-Cuadrada"]=list(gofstat(fitlogn)[3],gofstat(fitpar)[3],gofstat(fitweibull)[3],gofstat(fitlgamma)[3],gofstat(fitllog)[3])
final_table["Chi-Cuadrada"]=list(gofstat(fitlogn)[3],gofstat(fitpar)[3],gofstat(fitweibull)[3],gofstat(fitlgamma)[3],gofstat(fitllog)[3])
final_table
final_table["Chi-Cuadrada"]=[gofstat(fitlogn)[3],gofstat(fitpar)[3],gofstat(fitweibull)[3],gofstat(fitlgamma)[3],gofstat(fitllog)[3]]
final_table<-data.frame(=list(gofstat(fitlogn)[3],gofstat(fitpar)[3],gofstat(fitweibull)[3],gofstat(fitlgamma)[3],gofstat(fitllog)[3])
final_table<-data.frame("Chi-Cuadrada"=c(gofstat(fitlogn)[3],gofstat(fitpar)[3],gofstat(fitweibull)[3],gofstat(fitlgamma)[3],gofstat(fitllog)[3]))
View(final_table)
colnames(final_table)<-c("Log-Normal","Pareto","Weibull","Log-Gamma","Log-Logistica")
final_table
row.names(final_table)<-c("Chi-Cuadrada")
final_table<-data.frame(c(gofstat(fitlogn)[3],gofstat(fitpar)[3],gofstat(fitweibull)[3],gofstat(fitlgamma)[3],gofstat(fitllog)[3]))
colnames(final_table)<-c("Log-Normal","Pareto","Weibull","Log-Gamma","Log-Logistica")
row.names(final_table)<-c("Chi-Cuadrada")
final_table
final_table["A-D"]=list(gofstat(fitlogn)[8],gofstat(fitpar)[8],gofstat(fitweibull)[8],gofstat(fitlgamma)[8],gofstat(fitllog)[8])
final_table["A-D"]=c(gofstat(fitlogn)[8],gofstat(fitpar)[8],gofstat(fitweibull)[8],gofstat(fitlgamma)[8],gofstat(fitllog)[8])
final_table<-data.frame(c(gofstat(fitlogn)[3],gofstat(fitpar)[3],gofstat(fitweibull)[3],gofstat(fitlgamma)[3],gofstat(fitllog)[3]),c(gofstat(fitlogn)[8],gofstat(fitpar)[8],gofstat(fitweibull)[8],gofstat(fitlgamma)[8],gofstat(fitllog)[8]))
colnames(final_table)<-c("Log-Normal","Pareto","Weibull","Log-Gamma","Log-Logistica")
row.names(final_table)<-c("Chi-Cuadrada (p-value)", "A-D")
final_table
final_table<-data.frame(a=c(gofstat(fitlogn)[3],gofstat(fitpar)[3],gofstat(fitweibull)[3],gofstat(fitlgamma)[3],gofstat(fitllog)[3]),
b=c(gofstat(fitlogn)[8],gofstat(fitpar)[8],gofstat(fitweibull)[8],gofstat(fitlgamma)[8],gofstat(fitllog)[8]))
colnames(final_table)<-c("Log-Normal","Pareto","Weibull","Log-Gamma","Log-Logistica")
row.names(final_table)<-c("Chi-Cuadrada (p-value)", "A-D")
final_table
final_table<-data.frame((a=c(gofstat(fitlogn)[3],gofstat(fitpar)[3],gofstat(fitweibull)[3],gofstat(fitlgamma)[3],gofstat(fitllog)[3]),
final_table<-data.frame((a=c(gofstat(fitlogn)[3],gofstat(fitpar)[3],gofstat(fitweibull)[3],gofstat(fitlgamma)[3],gofstat(fitllog)[3])
b=c(gofstat(fitlogn)[8],gofstat(fitpar)[8],gofstat(fitweibull)[8],gofstat(fitlgamma)[8],gofstat(fitllog)[8])))
final_table<-data.frame(a=c(gofstat(fitlogn)[3],gofstat(fitpar)[3],gofstat(fitweibull)[3],gofstat(fitlgamma)[3],gofstat(fitllog)[3]),
b=c(gofstat(fitlogn)[8],gofstat(fitpar)[8],gofstat(fitweibull)[8],gofstat(fitlgamma)[8],gofstat(fitllog)[8]))
colnames(final_table)<-c("Log-Normal","Pareto","Weibull","Log-Gamma","Log-Logistica")
row.names(final_table)<-c("Chi-Cuadrada (p-value)", "A-D")
final_table
final_table$new=c(gofstat(fitlogn)[8],gofstat(fitpar)[8],gofstat(fitweibull)[8],gofstat(fitlgamma)[8],gofstat(fitllog)[8])
final_table$new=vector(gofstat(fitlogn)[8],gofstat(fitpar)[8],gofstat(fitweibull)[8],gofstat(fitlgamma)[8],gofstat(fitllog)[8])
vector(gofstat(fitlogn)[8],gofstat(fitpar)[8],gofstat(fitweibull)[8],gofstat(fitlgamma)[8],gofstat(fitllog)[8])
final_table$new<-c(gofstat(fitlogn)[8],gofstat(fitpar)[8],gofstat(fitweibull)[8],gofstat(fitlgamma)[8],gofstat(fitllog)[8])
gofstat(fitllog)[8]
gofstat(fitllog)[8][3]
gofstat(fitllog)[8][2]
gofstat(fitllog)[8][1]
gofstat(fitllog)[8][0]
gofstat(fitllog)[8]
gofstat(fitllog)[8].valueClassTest()
gofstat(list(fitlogn,fitpar))
gofstat(list(fitlogn,fitpar), fitnames = c("Log-Normal", "Pareto"))
gofstat(list(fitlogn,fitpar), fitnames = c("Log-Normal", "Pareto"))[3]
gofstat(list(fitlogn,fitpar,fitweibull,fitlgamma,fitllog), fitnames = c("Log-Normal", "Pareto","Weibull","Log-Gamma","Log-Logistica"))
gofstat(list(fitlogn,fitpar,fitweibull,fitlgamma,fitllog), fitnames = c("Log-Normal", "Pareto","Weibull","Log-Gamma","Log-Logistica"))[3]
gofstat(list(fitlogn,fitpar,fitweibull,fitlgamma,fitllog), fitnames = c("Log-Normal", "Pareto","Weibull","Log-Gamma","Log-Logistica"))[8]
gofstat(list(fitlogn,fitpar,fitweibull,fitlgamma,fitllog), fitnames = c("Log-Normal", "Pareto","Weibull","Log-Gamma","Log-Logistica"))[9]
gofstat(list(fitlogn,fitpar,fitweibull,fitlgamma,fitllog), fitnames = c("Log-Normal", "Pareto","Weibull","Log-Gamma","Log-Logistica"))[11]
gofstat(list(fitlogn,fitpar,fitweibull,fitlgamma,fitllog), fitnames = c("Log-Normal", "Pareto","Weibull","Log-Gamma","Log-Logistica"))[3]
gofstat(list(fitlogn,fitpar,fitweibull,fitlgamma,fitllog), fitnames = c("Log-Normal", "Pareto","Weibull","Log-Gamma","Log-Logistica"))[9]
gofstat(list(fitlogn,fitpar,fitweibull,fitlgamma,fitllog), fitnames = c("Log-Normal", "Pareto","Weibull","Log-Gamma","Log-Logistica"))[11]
gofstat(list(fitlogn,fitpar,fitweibull,fitlgamma,fitllog), fitnames = c("Log-Normal", "Pareto","Weibull","Log-Gamma","Log-Logistica"))
gofstat(list(fitlogn,fitpar,fitweibull,fitlgamma,fitllog), fitnames = c("Log-Normal", "Pareto","Weibull","Log-Gamma","Log-Logistica"))[3]
gofstat(list(fitlogn,fitpar,fitweibull,fitlgamma,fitllog), fitnames = c("Log-Normal", "Pareto","Weibull","Log-Gamma","Log-Logistica"))[9]
gofstat(list(fitlogn,fitpar,fitweibull,fitlgamma,fitllog), fitnames = c("Log-Normal", "Pareto","Weibull","Log-Gamma","Log-Logistica"))[11]
La prueba de Anderson-Darling se define como:
source("~/Workspace Universidad/Proyecto-Modelos/Proyecto-Modelos-Actuariales.R")
